name: git-fairy (best)

on:
  workflow_dispatch:
  schedule:
    - cron: "23 3 * * *"       # nightly pass, adjust as you like
  push:
    branches: [ main ]          # runs on main; gated by commit message

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  sprinkle:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule' ||
      (github.event_name == 'push' && contains(github.event.head_commit.message, 'fairy:'))
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure author
        run: |
          git config user.name  "git-fairy[bot]"
          git config user.email "git-fairy@users.noreply.github.com"

      - name: Find previous tag
        id: prev
        run: |
          if git describe --tags --abbrev=0 >/dev/null 2>&1; then
            echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          else
            echo "tag=" >> $GITHUB_OUTPUT
          fi

      - name: Collect commits since previous tag (or all)
        id: log
        run: |
          if [ -n "${{ steps.prev.outputs.tag }}" ]; then
            RANGE="${{ steps.prev.outputs.tag }}..HEAD"
          else
            RANGE="$(git rev-list --max-parents=0 HEAD | tail -n1)..HEAD"
          fi
          git log --pretty=format:'%s|%h' $RANGE > /tmp/commits.txt
          echo "range=$RANGE" >> $GITHUB_OUTPUT
          echo "count=$(wc -l < /tmp/commits.txt)" >> $GITHUB_OUTPUT

      - name: Build pretty CHANGELOG slice
        id: changelog
        run: |
          cat > /tmp/chunk.md <<'MD'
          ### ✨ Fairy Pass
          _Auto-curated since last tag._

          #### 🚀 Features
          MD
          awk -F'|' '/^feat(\(.+\))?:/ {sub(/^feat(\(.+\))?: /,""); printf "- %s (%s)\n",$1,$2}' /tmp/commits.txt >> /tmp/chunk.md
          echo -e "\n#### 🐛 Fixes" >> /tmp/chunk.md
          awk -F'|' '/^fix(\(.+\))?:/ {sub(/^fix(\(.+\))?: /,""); printf "- %s (%s)\n",$1,$2}' /tmp/commits.txt >> /tmp/chunk.md
          echo -e "\n#### 📝 Docs" >> /tmp/chunk.md
          awk -F'|' '/^docs(\(.+\))?:/ {sub(/^docs(\(.+\))?: /,""); printf "- %s (%s)\n",$1,$2}' /tmp/commits.txt >> /tmp/chunk.md
          echo -e "\n#### 🧹 Chore" >> /tmp/chunk.md
          awk -F'|' '/^(chore|refactor|style|test)(\(.+\))?:/ {sub(/^[^:]+: /,""); printf "- %s (%s)\n",$1,$2}' /tmp/commits.txt >> /tmp/chunk.md

          # If sections are empty, add a friendly note
          for h in "Features" "Fixes" "Docs" "Chore"; do
            if ! awk "/^#### .*${h}/{flag=1;next}/^#### /{flag=0}flag" /tmp/chunk.md | grep -q '^-'; then
              sed -i "s/#### .*${h}/#### $(echo $h)\n- (no entries this pass)/" /tmp/chunk.md
            fi
          done

          # Prepend dated header to CHANGELOG.md
          TS="$(date -u +'%Y-%m-%d %H:%M UTC')"
          {
            echo "## $TS — fairy best ✨"
            echo
            cat /tmp/chunk.md
            echo
          } > /tmp/header.md

          if [ -f CHANGELOG.md ]; then
            cat /tmp/header.md CHANGELOG.md > /tmp/NEWCHANGELOG.md
          else
            cat /tmp/header.md > /tmp/NEWCHANGELOG.md
          fi
          mv /tmp/NEWCHANGELOG.md CHANGELOG.md
          git add CHANGELOG.md

      - name: Stage all changes (if any)
        run: git add -A

      - name: Commit
        id: commit
        run: |
          if ! git diff --cached --quiet; then
            git commit -m "fairy: sprinkle dust + update CHANGELOG"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Push
        if: steps.commit.outputs.changed == 'true'
        run: git push origin HEAD:main

      - name: Compute today tag
        id: tag
        run: |
          BASE="v$(date -u +'%Y.%m.%d')-fairy"
          N=0
          TAG="$BASE"
          while git rev-parse "$TAG" >/dev/null 2>&1; do
            N=$((N+1))
            TAG="${BASE}.${N}"
          done
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git tag "${{ steps.tag.outputs.tag }}"
          git push origin "${{ steps.tag.outputs.tag }}"

      - name: Gather release body
        id: body
        run: |
          echo "### Release Notes" > /tmp/REL.md
          echo "" >> /tmp/REL.md
          cat /tmp/chunk.md >> /tmp/REL.md
          echo "" >> /tmp/REL.md
          echo "_Range:_ ${{ steps.log.outputs.range }}" >> /tmp/REL.md

      - name: Upload release (with dist/* assets if present)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }} — fairy best
          body_path: /tmp/REL.md
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  label-prs:
    name: label & tidy PRs (bonus)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
